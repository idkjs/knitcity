// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_array = require("bs-platform/lib/js/caml_array.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var Root$KnitZilla = require("./Root.bs.js");
var ReasonReactRouter = require("reason-react/src/ReasonReactRouter.js");
var Routing$KnitZilla = require("./Routing.bs.js");

var x = /* record */[/* contents */0];

function BackgroundWrapper(Props) {
  var match = Props.activeRoute;
  var activeRoute = match !== undefined ? match : Routing$KnitZilla.useAppUrl(/* () */0);
  var match$1 = React.useReducer((function (state, action) {
          if (action.tag) {
            return /* record */[
                    /* activeRoute */state[/* activeRoute */0],
                    /* startClientX */action[0]
                  ];
          } else {
            return /* record */[
                    /* activeRoute */action[0],
                    /* startClientX */state[/* startClientX */1]
                  ];
          }
        }), /* record */[
        /* activeRoute : Home */0,
        /* startClientX */0
      ]);
  var dispatch = match$1[1];
  React.useEffect((function () {
          Curry._1(dispatch, /* Route */Block.__(0, [activeRoute]));
          window.addEventListener("touchstart", (function (e) {
                  var e$1 = e;
                  var touch = Caml_array.caml_array_get(e$1.touches, 0);
                  var touchVal = touch.clientX;
                  x[0] = touchVal;
                  return Curry._1(dispatch, /* TouchStart */Block.__(1, [x[0]]));
                }));
          window.addEventListener("touchend", (function (e) {
                  var e$1 = e;
                  var touch = Caml_array.caml_array_get(e$1.changedTouches, 0);
                  var totalWindowWidth = touch.target.clientWidth;
                  var screenChange = x[0] - touch.clientX | 0;
                  var minReqMovement = totalWindowWidth * 0.25;
                  var match = screenChange > 0;
                  var dir = match ? /* Left */0 : /* Right */1;
                  if (Pervasives.abs(screenChange) > (minReqMovement | 0)) {
                    if (dir) {
                      ReasonReactRouter.push("/");
                    } else {
                      ReasonReactRouter.push("/calc");
                    }
                  }
                  x[0] = 0;
                  return /* () */0;
                }));
          return (function (param) {
                    return /* () */0;
                  });
        }), /* array */[activeRoute]);
  return React.createElement(Root$KnitZilla.make, { });
}

var make = BackgroundWrapper;

exports.x = x;
exports.make = make;
/* react Not a pure module */
